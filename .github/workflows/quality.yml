name: Quality Pipeline

on:
  workflow_run:
    workflows: ["Build"]
    types: [completed]
    branches: [main]

jobs:
  quality:
    name: Test and Lint
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version-file: ".bun-version"
      - name: Restore workspace cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
          key: workspace-${{ runner.os }}-${{ hashFiles('**/bun.lock') }}-${{ github.event.workflow_run.head_sha }}
          restore-keys: |
            workspace-${{ runner.os }}-${{ hashFiles('**/bun.lock') }}-
      - name: Run test with coverage
        run: bun run test:coverage
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage/lcov.info
          retention-days: 1
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: quality
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0
      - name: Restore workspace cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            dist
          key: workspace-${{ runner.os }}-${{ hashFiles('**/bun.lock') }}-${{ github.event.workflow_run.head_sha }}
          restore-keys: |
            workspace-${{ runner.os }}-${{ hashFiles('**/bun.lock') }}-
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4
        with:
          name: coverage
      - name: Find coverage report file
        run: |
          ls -la
          find . -name "lcov.info"
          LCOV_PATH=$(find . -name "lcov.info" | head -n 1)
          echo "LCOV_PATH=$LCOV_PATH" >> $GITHUB_ENV
      - name: SonarQube Scan - Bun Automock
        uses: SonarSource/sonarqube-scan-action@v5.3.1
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SCANNER_OPTS: >
            -Dsonar.log.level=WARN
            -Dsonar.javascript.lcov.reportPaths=${{ env.LCOV_PATH }}
